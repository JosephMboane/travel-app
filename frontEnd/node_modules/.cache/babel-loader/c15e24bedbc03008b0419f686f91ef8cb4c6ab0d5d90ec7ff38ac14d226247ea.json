{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josep\\\\OneDrive\\\\Documentos\\\\projectos\\\\travel-city\\\\src\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [countriesList, setCountriesList] = useState([]);\n  const countries = [{\n    name: \"Belgium\",\n    continent: \"Europe\"\n  }, {\n    name: \"India\",\n    continent: \"Asia\"\n  }, {\n    name: \"Bolivia\",\n    continent: \"South America\"\n  }, {\n    name: \"Ghana\",\n    continent: \"Africa\"\n  }, {\n    name: \"Japan\",\n    continent: \"Asia\"\n  }, {\n    name: \"Canada\",\n    continent: \"North America\"\n  }, {\n    name: \"New Zealand\",\n    continent: \"Australasia\"\n  }, {\n    name: \"Italy\",\n    continent: \"Europe\"\n  }, {\n    name: \"South Africa\",\n    continent: \"Africa\"\n  }, {\n    name: \"China\",\n    continent: \"Asia\"\n  }, {\n    name: \"Paraguay\",\n    continent: \"South America\"\n  }, {\n    name: \"Usa\",\n    continent: \"North America\"\n  }, {\n    name: \"France\",\n    continent: \"Europe\"\n  }, {\n    name: \"Botswana\",\n    continent: \"Africa\"\n  }, {\n    name: \"Spain\",\n    continent: \"Europe\"\n  }, {\n    name: \"Senegal\",\n    continent: \"Africa\"\n  }, {\n    name: \"Brazil\",\n    continent: \"South America\"\n  }, {\n    name: \"Denmark\",\n    continent: \"Europe\"\n  }, {\n    name: \"Mexico\",\n    continent: \"South America\"\n  }, {\n    name: \"Australia\",\n    continent: \"Australasia\"\n  }, {\n    name: \"Tanzania\",\n    continent: \"Africa\"\n  }, {\n    name: \"Bangladesh\",\n    continent: \"Asia\"\n  }, {\n    name: \"Portugal\",\n    continent: \"Europe\"\n  }, {\n    name: \"Pakistan\",\n    continent: \"Asia\"\n  }];\n  const items = [{\n    nome: 'Apple',\n    apelido: 'mboaen'\n  }, {\n    nome: 'Banana',\n    apelido: 'mboaen'\n  }, {\n    nome: 'Orange',\n    apelido: 'mboaen'\n  }, {\n    nome: 'Mango',\n    apelido: 'mboaen'\n  }];\n  const handleChange = e => {\n    console.log('o é', e.target.value);\n    e.preventDefault();\n    setSearchInput(e.target.value);\n  };\n  if (searchInput.length > 0) {\n    console.log(\"hhhh\");\n    setCountriesList(countries.filter(country => {\n      return country.name.match(searchInput);\n    }));\n  }\n  console.log(\"co\", countries);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Search here\",\n      onChange: handleChange,\n      value: searchInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Continent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), countriesList.map((country, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: country.continent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n};\n_s(SearchBar, \"JI/qurXxDJnFwH76SSb4P6M/8nw=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchBar","_s","searchInput","setSearchInput","countriesList","setCountriesList","countries","name","continent","items","nome","apelido","handleChange","e","console","log","target","value","preventDefault","length","filter","country","match","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["C:/Users/Josep/OneDrive/Documentos/projectos/travel-city/src/SearchBar.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nconst SearchBar = () => {\r\n\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    const [countriesList, setCountriesList] = useState([]);\r\n\r\n    const countries = [\r\n\r\n        { name: \"Belgium\", continent: \"Europe\" },\r\n        { name: \"India\", continent: \"Asia\" },\r\n        { name: \"Bolivia\", continent: \"South America\" },\r\n        { name: \"Ghana\", continent: \"Africa\" },\r\n        { name: \"Japan\", continent: \"Asia\" },\r\n        { name: \"Canada\", continent: \"North America\" },\r\n        { name: \"New Zealand\", continent: \"Australasia\" },\r\n        { name: \"Italy\", continent: \"Europe\" },\r\n        { name: \"South Africa\", continent: \"Africa\" },\r\n        { name: \"China\", continent: \"Asia\" },\r\n        { name: \"Paraguay\", continent: \"South America\" },\r\n        { name: \"Usa\", continent: \"North America\" },\r\n        { name: \"France\", continent: \"Europe\" },\r\n        { name: \"Botswana\", continent: \"Africa\" },\r\n        { name: \"Spain\", continent: \"Europe\" },\r\n        { name: \"Senegal\", continent: \"Africa\" },\r\n        { name: \"Brazil\", continent: \"South America\" },\r\n        { name: \"Denmark\", continent: \"Europe\" },\r\n        { name: \"Mexico\", continent: \"South America\" },\r\n        { name: \"Australia\", continent: \"Australasia\" },\r\n        { name: \"Tanzania\", continent: \"Africa\" },\r\n        { name: \"Bangladesh\", continent: \"Asia\" },\r\n        { name: \"Portugal\", continent: \"Europe\" },\r\n        { name: \"Pakistan\", continent: \"Asia\" },\r\n\r\n    ];\r\n    const items = [\r\n        { nome: 'Apple', apelido: 'mboaen' },\r\n        { nome: 'Banana', apelido: 'mboaen' },\r\n        { nome: 'Orange', apelido: 'mboaen' },\r\n        { nome: 'Mango', apelido: 'mboaen' }\r\n\r\n    ];\r\n    const handleChange = (e) => {\r\n        console.log('o é', e.target.value);\r\n\r\n        e.preventDefault();\r\n        setSearchInput(e.target.value);\r\n\r\n    };\r\n    if (searchInput.length > 0) {\r\n        console.log(\"hhhh\",)\r\n        setCountriesList(\r\n            countries.filter((country) => {\r\n                return country.name.match(searchInput);\r\n            }))\r\n    }\r\n\r\n\r\n    console.log(\"co\", countries)\r\n\r\n    return <div className='mt-5'>\r\n\r\n\r\n\r\n        <input\r\n            type=\"search\"\r\n            placeholder=\"Search here\"\r\n            onChange={handleChange}\r\n            value={searchInput} />\r\n\r\n        <table className=\"table\">\r\n            <tr>\r\n                <th>Country</th>\r\n                <th>Continent</th>\r\n            </tr>\r\n\r\n            {countriesList.map((country, index) => (\r\n                <tr key={index}>\r\n                    <td>{country.name}</td>\r\n                    <td>{country.continent}</td>\r\n                </tr>\r\n\r\n\r\n            ))}\r\n        </table>\r\n    </div>\r\n\r\n\r\n};\r\n\r\nexport default SearchBar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}